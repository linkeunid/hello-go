apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  labels:
    app: auth-service
data:
  DB_DRIVER: "mysql"
  AUTH_SERVICE_PORT: "8081"
  AUTH_SERVICE_GRPC_PORT: "9091"
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_USER: "root"
  DB_NAME: "microservices"
  DB_PARAMS: "charset=utf8mb4&parseTime=True&loc=Local"
  JWT_EXPIRATION: "24h"
  LOG_LEVEL: "info"
  SERVICE_DISCOVERY_URL: "service-discovery:8500"
  ENVIRONMENT: "production"
  USE_MOCK_SERVICES: "false"
  BYPASS_AUTH: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  labels:
    app: auth-service
type: Opaque
data:
  DB_PASSWORD: cm9vdHBhc3N3b3Jk # Base64 encoded "rootpassword"
  JWT_SECRET: eW91ci1zZWNyZXQta2V5 # Base64 encoded "your-secret-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: your-registry/auth-service:latest
          command: ["./auth"]
          ports:
            - containerPort: 8081
              name: http
            - containerPort: 9091
              name: grpc
          envFrom:
            - configMapRef:
                name: auth-service-config
            - secretRef:
                name: auth-service-secrets
          resources:
            limits:
              cpu: "200m"
              memory: "256Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 3
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "until nc -z mysql-service 3306; do echo waiting for mysql; sleep 2; done;",
            ]
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  selector:
    app: auth-service
  ports:
    - name: http
      port: 8081
      targetPort: 8081
    - name: grpc
      port: 9091
      targetPort: 9091
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: api.your-domain.com
      http:
        paths:
          - path: /auth(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 8081
